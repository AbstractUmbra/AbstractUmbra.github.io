name: Build Project Wheels

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0,12 * * *"

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}

jobs:
  build_wheels:
    name: ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-12]
        python-version: ["3.11", "3.12.0-alpha - 3.12"]
        # python-version: ["3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        name: Install Python on ${{ matrix.python-version }} with ${{ matrix.os }}
        with:
          python-version: ${{ matrix.python-version }}

      - name: Ubuntu extra deps
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update -y
          sudo apt install portaudio19-dev

      - name: MacOS extra deps
        if: matrix.os == 'macos-12'
        run: |
          brew install portaudio

      - name: Python Prereqs
        run: |
          python -m pip install -U wheel setuptools pip Cython

      - name: Build wheels
        run: |
          python -m pip wheel -w dist -r pip/wheel-requirements.txt

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: |
            dist/*.whl

  cleanup_and_commit:
    needs: [build_wheels]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Revert last commit if it was GitHub Actions
        run: |
          if [[ "$(git show -s --format='%ae' HEAD)" == *"github-actions"* ]]; then
            git reset --hard HEAD^;
          fi

      - uses: actions/download-artifact@v3
        name: Download built wheels
        with:
          name: dist
          path: ./pip/

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: "3.11"
          cache: pip

      - name: Install pre-requisite deps
        run: |
          pip install -U -r requirements.txt
        working-directory: ./pip

      - name: Cleanup the artifacts
        run: |
          python cleanup_artifacts.py
        working-directory: ./pip

      - name: Generate the indices
        run: |
          python generate_terrible_indices.py
        working-directory: ./pip

      - name: Commit and push changes
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git add .
          git commit -m "Autogenerated commit for build wheen on $(date +%Y-%m-%d_%H-%M)"
          git push --force
